name: CI

on:
  push:
    branches: [ "Feature/0824 workbanch", main, master ]
  pull_request:
    branches: [ "Feature/0824 workbanch", main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_DB: newshub
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      PYTHONUNBUFFERED: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      # Fixed environment expected by imports/tests
      APP_BIND_HOST: 127.0.0.1
      APP_BIND_PORT: '3011'
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/newshub
      EMBED_SPACE: e5-multilingual
      EMBEDDING_SPACE: e5-multilingual
      UI_ENABLED: '0'
      CI: "true"
      # Where to write progress file for linking (use /tmp for portability)
      PROGRESS_FILE: /tmp/linking.progress
      LINK_PROGRESS_FILE: /tmp/linking.progress
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Prepare database schema
        run: |
          until pg_isready -h localhost -U postgres -d newshub; do sleep 1; done
          psql postgresql://postgres:postgres@localhost:5432/newshub -c "CREATE EXTENSION IF NOT EXISTS vector;"
          psql postgresql://postgres:postgres@localhost:5432/newshub -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"
          psql postgresql://postgres:postgres@localhost:5432/newshub -f db/schema_v2.sql
          psql postgresql://postgres:postgres@localhost:5432/newshub -f db/indexes_core.sql
          for f in db/migrations/*.sql; do if [ -f "$f" ]; then psql postgresql://postgres:postgres@localhost:5432/newshub -f "$f"; fi; done

      - name: Run tests
        run: pytest -q

      - name: Check vector index
        run: |
          psql "$DATABASE_URL" -c "\\d+ chunk_vec" | grep -E 'hnsw' || true
